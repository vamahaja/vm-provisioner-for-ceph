---
- hosts: localhost
  connection: local
  gather_facts: no
  run_once: yes
  tasks:

  # Validate config file
  - name: Read and validate config file
    dt_validate_vms_provisioning_config:
      path: "{{ config_filepath }}"
      check_groups: ['vm', 'vcenter']
    register: config_output
  - name:
    set_fact:
      config: "{{ config_output.config }}"
  - name: DEBUG. Print parsed config file data
    debug:
      msg: "{{ config }}"

  - name: Set username and password
    set_fact:
      vcenter_host: "{{ config.vcenter.host}}"
      vcenter_username: "{{ config.vcenter.username }}"
      vcenter_password: "{{ config.vcenter.password }}"
      vcenter_datacenter : "{{ config.vcenter.datacenter }}"
      vcenter_cluster : "{{ config.vcenter.cluster }}"
      vcenter_resource_pool : "{{ config.vcenter.resource_pool }}"
      vcenter_folder : "{{ config.vcenter.folder }}"
      vcenter_datastore : "{{ config.vcenter.datastore }}"
      vcenter_vm_network : "{{ config.vcenter.vm_network }}"

  - name: Check if all vCenter configs are defined
    fail:
      msg: "Mandatory vcenter parameter(s) (is|are) not defined"
    when: item | length == 0
    with_items:
    - "{{ vcenter_host }}"
    - "{{ vcenter_datacenter }}"
    - "{{ vcenter_cluster }}"
    - "{{ vcenter_resource_pool }}"
    - "{{ vcenter_folder }}"
    - "{{ vcenter_datastore }}"
    - "{{ vcenter_vm_network }}"

  - name: Create resource pool and directory if absent
    import_role:
      name: create_vcenter_resource_pool_and_dir
    vars:
      config: "{{ config }}"
